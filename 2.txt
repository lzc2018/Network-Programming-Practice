1:客户端 - 服务器端
服务器端：需要在一开始就监听在一个众所周知的端口上，等待客户端发送请求，一旦有客户端连接建立，服务器端就会消耗一定的
计算机资源为它服务，服务器端是需要同时为成千上万的客户端服务的。如何保证服务器端在数据量巨大的客户端访问时依然能维
持效率和稳定，这也是我们讲述高性能网络编程的目的。
客户端：相对来说更为简单，它向服务器端的监听端口发起连接请求，连接建立之后，通过连接通路和服务器端进行通信。
2：无论是客户端，还是服务器端，它们运行的单位都是进程。
3:TCP(字节流套接字)Stream Socket
  UDP(数据报套接字)Datagram Socket
4:使用UDP的原因：速度
(1)想象一下，一个有上万人的联网游戏，如果要给每个玩家同步游戏中其他玩家的位置信息，而且丢失一两个也不会造成多
大的问题，那么UDP 是一个比较经济合算的选择。
(2)还有一种叫做广播或多播的技术，就是向网络中的多个节点同时发送信息，这个时候，选择 UDP 更是非常合适的。
(3)UDP 也可以做到更高的可靠性，只不过这种可靠性，需要应用程序进行设计处理，比如对报文进行编号，设计 Request--Ack 
机制，再加上重传等，在一定程度上可以达到更为高可靠的 UDP 程序。当然，这种可靠性和 TCP 相比还是有一定的距离，不过
也可以弥补实战中 UDP 的一些不足。
4：一个比较常见的现象是，我们所在的单位或者组织，普遍会使用诸如10.0.x.x 或者 192.168.x.x 这样的 IP地址，你可能会
纳闷，这样的 IP 到底代表了什么呢？
背后的原因是这样的，国际标准组织在 IPv4 地址空间里面，专门划出了一些网段，这些网段不会用做公网上的 IP，而是仅仅
保留做内部使用，我们把这些地址称作保留网段。



5:问答？
(1)服务端必须侦听在一个众所周知的端口上，这个端口怎么选择，又是如何让客户端知道的呢？
答：服务器可以监听的端口有从0到65535，理论上这台服务器的这个端口只要没被占用，你都可以给服务器绑定。
	如果是一些默认的服务，服务器绑的也是默认的端口，那么客户端是可以知道的。
	比如:80是给http服务，443是给https服务，21是给ftp服务，22是给ssh服务等。
	否则的话，就需要服务器开发者告诉客户端应该连接哪个端口













